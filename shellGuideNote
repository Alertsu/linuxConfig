#############Shell Guide学习笔记#############
#Linxu命令的使用
help	--说明解释一个命令名
which	--显示执行哪一个命令程序
man	--显示命令手册页
apropos	--显示一系列适合的命令
info	--显示命令info
whatis	--显示一个命令的简洁描述
alias	--创建命令别名
#linux重定向命令
#linux重定向符">(标准输出重定向)"和"<(标准输入重定向)"
#linux追加重定向">>"  ---"0:标准输入,1:标准输出,2:错误"
#linux标准错误输出重定向"2" ,例如:ls -l /bin/usr 2> ls-error.txt
#linux重定向标注输出和错误到同一个文件
#1.	ls -l /bin/usr >ls-output.txt 2>&1	(注意:标准错误的重定向必须在标准输出的重定向之后,不然它就不起作用)
#2.	ls -l /bin/usr &>ls-output.txt		(新版shell)
cat	--连接文件
sort	--排序文件行
uniq	--报道或省略重复行
grep	--打印匹配行
wc	--打印文件中换行符,字和字节个数
head	--输出文件第一部分
tail	--输入文件最后一部分
echo	--显示一行文本
tee	--从标准输入读取数据,同时复制数据到标准输出
iconv	--字符集转换(f后是原,t后是转换后)

#echo用法和shell的展开等
字符展开	echo *
路径名展开	echo .*			#隐藏文件夹显示
波浪线展开	echo ～alter		#alter用户的家目录
算数表达式展开	echo $((3+8))		#算数表达式格式：$((expression))
花括号展开	mkdir {2007..2009}-{1..9}{2007..2009}-{10..12}
参数展开		echo $USER		#获取USER变量的值
命令替换		ls -l $(which cp)	#获取cp,再使用ls显示详细信息
引用		1."2.'	      	      	#1.双引号(除:$,\(反斜杠),'(倒引号))
					#2.单引号($的展开被禁止)
转义字符		\			#阻止展开


#键盘高级操作
清屏		clear			#清空屏幕
历史		history			#显示历史列表内容


#Shell命令行快捷方式
#移动光标
按键					#行动
Ctrl-a					#移动光标到行首
Ctrl-e					#移动光标到行尾
Ctrl-f					#光标前移一个字符(和右箭头作用一样)
Ctrl-b					#光标后移一个字符(和左箭头作用一样)
Alt-f					#光标前移一个字
Alt-b					#光标后移一个字
Ctrl-l					#清空屏幕(和clear命令一样)
#修改文本
Ctrl-d					#删除光标位置的字符
Ctrl-t					#光标位置的字符和光标前面的字符互换位置
Alt-t					#光标位置的字和其前面的字互换位置
Alt-l					#把光标位置到字尾的字符转换成小写字母
Alt-u					#把光标位置到字尾的字符转换成大写字母
#剪切和粘贴文本
Ctrl-k					#剪切从光标位置到行尾的文本
Ctrl-u					#剪切从光标位置到行首的文本
Alt-d					#剪切从光标位置到词尾的文本
Alt-backspace				#剪切从光标位置到词头的文本,如果光标在一个单词的开头,剪切一个单词
Ctrl-y					#把剪切环中的文本粘贴到光标位置
#自动补全
tab					#自动补全
Alt-?					#显示可能的自动补全列表.(也可以通过按两次tab键来实现)
Alt-*					#插入所有可能的自动补全(当你想要使用多个可能的匹配时,这个很有帮助)
set					#可编程自动补全

###########历史命令的使用(history)###########
Ctrl-r					#反向递增搜索(从当前命令行开始,向上递增搜索)
Ctrl-j					#复制历史命令
Ctrl-p					#移动到上个历史条目(类似上箭头按键)
Ctrl-n					#移动到下个历史条目(类似下箭头按键)
Alt-<					#移动到历史列表开头
Alt->					#移动到历史列表结尾,即当前命令行
Alt-p					#反向搜索,不是递增顺序,输入要查找的字符串,然后按下Enter,执行搜索
Alt-n					#向前搜索,非递增顺序
Ctrl-o					#执行列表中的当前项,并移到下一个.(如果你想要执行列表中的一系列命令,这个很方便)
#历史命令展开
!number					#重复历史列表中第number行的命令
!!					#重复最后一行执行的命令,(可能按下上箭头按键和Enter键更容易)
!string					#重复历史列表中,以这个字符串开头的命令
!?string				#重复历史列表中,包含这个字符串的命令

###########权限############
id					#显示用户身份号
chmod					#更改文件模式
umask					#设置默认的文件权限
su					#以另一个用户的身份来运行Shell
sudo					#以另一个用户的身份来执行命令
chown					#更改文件所有者
chgrp					#更改文件组所有权
passwd					#更改用户密码
#chmod更改文件模式
#文件类型
属性				文件类型
-				#一个普通文件
d				#一个目录
l				#一个符号链接,对符号链接文件剩余的文件属性总是"rwxrwxrwx",而且都是虚拟值,真正的文件属性是符号链接所指向的文件的属性
c				#一个字符设备文件.这个文件类型是指按照字节流,来处理数据的设备.比如终端机或者调制解调器
b				#一个块设备文件,这个文件类型是指按照数据块,来处理数据的设备,例如一个硬盘或者CD-ROM盘


#1.八进制数字表示法
octal		binary		File Mode
0		000		---
1		001		--x
2		010		-w-
3		011		-wx
4		100		r--
5		101		r-x
6		110		rw-
7		111		rwx

#2.符号表示法
缩写				含义
u				"user"的简写,意思是文件和目录的所有者
g				用户组
o				"other"的简写,意思是其他所有的人
a				"all"的简写,是"u","g","o"三者的联合
#如果没有指定字符,则假定使用"all"
u+x				#为文件所有者添加可执行权限
u-x				#删除文件所有者的可执行权限
+x				#为文件所有者,用户组和其他所有人添加可执行权限.等价于a+x
o-rw				#除去文件所有者和用户组,删除其他人的读权限和写权限
go=rw				#给群组的主人和任意文件拥有者的人读写权限.如果群组的主人或其他所有人已经有了执行的权限,他们将被移除
u+x,go=rx			#给文件拥有者执行权限并给组和其他人读和执行的权限.多种设定可以用逗号分开

#umask设置默认权限
#umask使用八进制来表达从文件模式属性中删除一个位掩码
#当二进制出现数字1的位置,关掉相应的文件模式属性
file mode	--- rw- r-- r--		--- rw- rw- rw-		--- rw- rw- r--
mask 		000 000 010 010(0022)	000 000 000 000(0000)	000 000 000 010(0002)

#更改身份
1.	注销系统并以其他用户登录
2.	使用su命令(需要输入其他用户的密码)
3.	使用sudo命令(需要配置/etc/sudoers文件,需要输入自己(正在使用的用户)的密码)

#chown更改文件所有者
chown	[own][:[group]] file...
chown	bob:users	#把文件所有者变更为bob,文件用户组变更为users用户组
chown	:admins		#把文件用户组改为admins,文件所有者不变
chown	bob:		#文件所有者改为用户bob,文件用户组改为用户bob登录系统时所属的用户组

#chgrp更改用户组所有权	和chown类似

#添加用户 		adduser -m
#添加用户 		useradd -m
#删除用户 		userdel -r
#添加用户组	 	groupadd

########################进程########################
#
ps			#报告当前进程快照
top			#显示任务
jobs			#列出活跃的任务
bg			#把一个任务放到后台执行
fg			#把一个任务放到前台执行
kill			#给一个进程发送进程
killall			#杀死指定名字的进程
shutdown		#关机或重启系统


##ps的STAT(state)的详解
状态			意义
R(run)			运行(进程正在运行或准备运行)
S(sleep)		正在睡眠.进程没有运行,而是正在等待一个事件,比如说,一个按键或网络数据包
D			不可中断睡眠,进程正在等待I/O,比方说,一个磁盘驱动器的I/O
T			已停止,已经指示进程停止运行
Z(zombie)		一个死程序或"僵尸"程序,这是一个已经终止的子进程,但是它的父进程还没有清空它
<			一个高优先级进程,这可能会授予一个进程更多重要的资源,给它更多的CPU时间,进程的这种属性叫做niceness.具有高优先级的进程据说是不好的(less nice),因为它占用了比较多的CPU时间,这样给其它进程留下很少时间.
N			低优先级进程,一个低优先级进程(一个"好"的进程)只有当其它高优先级进程执行之后,才能得到处理器时间


###ps标题详解
标题			意思
USER			用户ID,进程的所有者
%CPU			以百分比表示的CPU使用率
%MEM			以百分比表示的内存使用率
VSZ			虚拟内存的大小
RSS			进程占用的物理内存的大小,以千字节为单位
START			进程运行的起始时间,若超过24小时,则用天表示

###top命令动态查看进程详解
行号		字段			意义
1		top			程序名
		14:59:20		当前时间
		up 6:30			这是正常运行时间,它是计算机从上次启动到现在所运行的时间.在这个例子里,系统已经运行了六个半小时
		2users			有两个用户登录系统
		load:average		加载平均值是指,等待运行的进程数目,也就是说,处于运行状态的进程个数,这些进程共享CPU.展示了三个数值,每个数值对应不同的时间周期.第一个是最后60秒的平均值,下一个是前5分钟的平均值,最后一个是前15分钟的平均值.若平均值低于1.0,则指示计算机工作不忙碌.
2		Tasks			总结了进程数目和各个进程状态
3		Cpu(s)			这一行描述了CPU正在执行的进程的特性
		0.7%us			0,7% of the CPU is being used for user processes,这意味着进程在内核之外
		1.0%sy			1.0%的CPU时间被用于系统(内核)进程
		0.0%ni			0.0%的CPU时间被用于"nice"(低优先级)进程
		98.3%id			98.3%的CPU时间是空闲的
		0.0%wa			0.0%的CPU时间来等待的			
4		MEM			展示物理内存的使用情况
5		Swap			展示交换分区(虚拟内存)的使用情况


##把一个进程放置到后台(执行):在命令之后加上"&"字符
##列出从终端启动的任务:jobs命令
##返回前台:fg命令之后,跟随着一个百分号和工作序号(叫做jobspec)(例如:fg %1)

###通过kill命令给进程发送信号
编号	名字			含义
1	HUP			挂起.
2	INT			中断.实现和Ctrl-c一样的功能,由终端发送,通常它会终止一个程序
9	KILL			杀死,当一个进程以这种方式终止的时候,它没有机会去做些"清理"工作,或者是保存劳动成果
15	TERM			终止.KILL命令的默认命令
18	CONT			继续.在停止一段时间后,进程恢复运行
19	STOP			停止.
3	QUIT			退出
11	SEGV			段错误
20	TSTP			终端停止
28	WINCH			改变窗口大小
#完整的KILL列表:kill -l

#通过killall命令给多个进程发送信号
killall [-u user] [-signal] name...

#更多和进程相关的命令
命令名			命令描述
pstree			输出一个树进程结果的进程列表，这个列表展示了进程间父/子关系
vmstat			输出一个系统资源使用快照，包括内存，交换分区和磁盘I/O，为了看到连续的显示结果，则在命令后加上延时的时间（以秒为单位）。例如:"vmstat 5 ".终止输出，按下Ctrl-c组合键。
xload			一个图形界面程序，可以画出系统的负载的图形
tload			与xload程序相似，但是在终端中画出图形。使用Ctrl-c，来终止输出。


#######################Shell环境命令#######################
printenv		打印部分或所有的环境变量
set			设置Shell选项
export			导出环境变量，让随后执行的程序知道
alias			创建命令别名
